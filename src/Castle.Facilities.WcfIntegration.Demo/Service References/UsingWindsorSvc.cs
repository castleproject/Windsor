// Copyright 2004-2011 Castle Project - http://www.castleproject.org/
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Castle.Facilities.WcfIntegration.Demo.UsingWindsorSvc
{
	using System.CodeDom.Compiler;
	using System.Diagnostics;
	using System.ServiceModel;
	using System.ServiceModel.Channels;

	[GeneratedCode("System.ServiceModel", "3.0.0.0")]
	[ServiceContract(ConfigurationName="Castle.Facilities.WcfIntegration.Demo.UsingWindsorSvc.IAmUsingWindsor")]
	public interface IAmUsingWindsor
	{
		[OperationContract(Action="http://tempuri.org/IAmUsingWindsor/GetValueFromWindsorConfig",
			ReplyAction="http://tempuri.org/IAmUsingWindsor/GetValueFromWindsorConfigResponse")]
		int GetValueFromWindsorConfig();
	}

	[GeneratedCode("System.ServiceModel", "3.0.0.0")]
	public interface IAmUsingWindsorChannel : IAmUsingWindsor, IClientChannel
	{
	}

	[DebuggerStepThrough()]
	[GeneratedCode("System.ServiceModel", "3.0.0.0")]
	public partial class AmUsingWindsorClient : ClientBase<IAmUsingWindsor>, IAmUsingWindsor
	{
		public AmUsingWindsorClient()
		{
		}

		public AmUsingWindsorClient(string endpointConfigurationName) :
			base(endpointConfigurationName)
		{
		}

		public AmUsingWindsorClient(string endpointConfigurationName, string remoteAddress) :
			base(endpointConfigurationName, remoteAddress)
		{
		}

		public AmUsingWindsorClient(string endpointConfigurationName, EndpointAddress remoteAddress) :
			base(endpointConfigurationName, remoteAddress)
		{
		}

		public AmUsingWindsorClient(Binding binding, EndpointAddress remoteAddress) :
			base(binding, remoteAddress)
		{
		}

		#region IAmUsingWindsor Members

		public int GetValueFromWindsorConfig()
		{
			return base.Channel.GetValueFromWindsorConfig();
		}

		#endregion
	}
}